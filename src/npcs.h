.ifndef ::_NPCS_H_
::_NPCS_H_ = 1

.include "game.h"
.setcpu "65816"

.include "includes/import_export.inc"
.include "includes/synthetic.inc"
.include "includes/registers.inc"
.include "includes/structure.inc"

.enum
	NPC_DEAD		=  0
	NPC_WALK_TO_ELEVATOR 	=  2
	NPC_ENTER_ELEVATOR	=  4
	NPC_WAIT_DOOR_CLOSE	=  6
	NPC_LIMBO		=  8
	NPC_WAIT_DOOR_OPEN	= 10
	NPC_EXIT_ELEVATOR	= 12
	NPC_WALK_OFFSCREEN	= 14
	NPC_FIGHTING		= 16
	NPC_WRONG_FLOOR		= 18
.endenum

.enum
	NPC_FRAME_STAND		= 0
	NPC_FRAME_WALK
	NPC_FRAME_WAIT
.endenum

.enum
	NPC_FEELINGS_NORMAL	= 0
	NPC_FEELINGS_STRESSED
	NPC_FEELINGS_ANGRY
.endenum

N_NPCS	= 12

NPC_FEELINGS_MIN_TIMEOUT= 55000
NPC_FEELINGS_MAX_TIMEOUT= $FFFF
NPC_FEELINGS_SPEED	= 150 ; ~18.3 - 21.8 seconds to angry
NPC_MAX_FEELINGS_SPEED	= 400 ; ~6.9 - 8.1 seconds to angry

NPC_LINE_SPACING	= 18
NPC_LEFT_WAIT_XPOS	= 60
NPC_RIGHT_WAIT_XPOS	= 256 - NPC_LEFT_WAIT_XPOS

NPC_YSTART		= 60
NPC_LEFT_XSTART		= -10
NPC_RIGHT_XSTART	= 255+10
NPC_ELEVATOR_YPOS	= 52
NPC_ELEVATOR_XPOS	= 72

NPC_WALK_OFFSCREEN_YPOS	= 64
NPC_WALK_OFFSCREEN_XPOS	= 64
NPC_LEFT_OFFSCREEN_XPOS = -10
NPC_RIGHT_OFFSCREEN_XPOS  = 256+10

NPC_WALK_SPEED		 =  70
NPC_WALK_OFFSCREEN_SPEED = 100
NPC_MOVE_FRAME_DELAY	 =  12

NPC_ENTER_ELEVATOR_FRAMES = 30
NPC_EXIT_ELEVATOR_FRAMES = 30

NPC_ENTER_ELEVATOR_XSPEED = (NPC_ELEVATOR_XPOS - NPC_LEFT_WAIT_XPOS) * 256 / NPC_ENTER_ELEVATOR_FRAMES
NPC_ENTER_ELEVATOR_YSPEED = (NPC_YSTART - NPC_ELEVATOR_YPOS) * 256 / NPC_ENTER_ELEVATOR_FRAMES
NPC_EXIT_ELEVATOR_XSPEED = (NPC_ELEVATOR_XPOS - NPC_WALK_OFFSCREEN_XPOS) * 256 / NPC_EXIT_ELEVATOR_FRAMES
NPC_EXIT_ELEVATOR_YSPEED = (NPC_WALK_OFFSCREEN_YPOS - NPC_ELEVATOR_YPOS) * 256 / NPC_EXIT_ELEVATOR_FRAMES



ARROW_LEFT_UP_TILE	= 27 | 7 << TILEMAP_PALETTE_SHIFT | TILEMAP_ORDER_FLAG
ARROW_LEFT_DOWN_TILE	= 26 | 7 << TILEMAP_PALETTE_SHIFT | TILEMAP_ORDER_FLAG
ARROW_RIGHT_UP_TILE	= 29 | 7 << TILEMAP_PALETTE_SHIFT | TILEMAP_ORDER_FLAG
ARROW_RIGHT_DOWN_TILE	= 28 | 7 << TILEMAP_PALETTE_SHIFT | TILEMAP_ORDER_FLAG



IMPORT_MODULE Npcs

	;; Initialises the NPCs' variables
	;;
	;; REQUIRE: 8 bit A, 16 bit Index
	ROUTINE Init

	;; Processes each NPC for a single frame.
	ROUTINE Process

	;; Notify the NPC that the elevator is going to open the door
	;;
	;; REQUIRES: 8 bit A, 16 bit Index
	;; INPUT:
	;;	A: Elevator floor
	;;	X: NPC
	ROUTINE OccupiedElevatorDoorOpening

	;; Notify the NPC that the elevator door has finished opening
	;;
	;; REQUIRES: 8 bit A, 16 bit Index
	;; INPUT:
	;;	A: Elevator floor
	;;	X: NPC
	ROUTINE OccupiedElevatorOpen

ENDMODULE

.endif ; ::_NPCS_H_

; vim: set ft=asm:

